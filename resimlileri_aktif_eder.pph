<?php
/**
 * Created by PhpStorm.
 * User: erayusta
 * Date: 15.09.2017
 * Time: 10:22
 */

ini_set( 'display_errors', '1' );
error_reporting( E_ALL );
ini_set( 'max_execution_time', 0 );
set_time_limit( 0 );
ini_set( 'memory_limit', '-1' );
require_once( '../app/Mage.php' );
umask( 0 );
Mage::setIsDeveloperMode( true );
Mage::app();
Mage::register( 'isSecureArea', true );
Mage::app()->setCurrentStore( Mage_Core_Model_App::ADMIN_STORE_ID );
$websiteId = Mage::app()->getWebsite()->getId();
$store     = Mage::app()->getStore();



$dir   = '../images/';
$files = scandir( $dir );


$MediaDir = Mage::getConfig()->getOptions()->getMediaDir();
$mediaApi = Mage::getModel( "catalog/product_attribute_media_api" );
$t        = 0;
foreach ( $files as $key => $file ) {
	if ( $key > 2 ) {
		if ( $file != 'index.html' ) {
			$d = array( "_1.jpg", "_2.jpg", "_3.jpg", "_4.jpg", "_5.jpg", "_6.jpg", "_7.jpg", "_8.jpg" );

			$arr[] = str_replace( $d, "", $file );

		}
	}
}

$sonuc = array_unique( $arr );

$conn = Mage::getSingleton( 'core/resource' );
$db   = $conn->getConnection( 'core_write' );
$t    = $k = $m = 0;
foreach ( $sonuc as $barkod ) {
	$collection = Mage::getModel( 'catalog/product' )->getCollection()->addAttributeToFilter( 'barkod', array( 'eq' => $barkod ) )->load();
	if ( isset( $collection ) && count( $collection ) > 0 ) {
		foreach ( $collection as $product ) {

			$parentIds = Mage::getResourceSingleton( 'catalog/product_type_configurable' )->getParentIdsByChild( $product->getId() );


			if ( ! $parentIds ) {
				print "Ürün yok! " . $m ++ . " " . $product->getSku() . "\n";
			} else {
				$configProduct = Mage::getModel( 'catalog/product' )->load( $parentIds[0] );
				$sql           = "SELECT * FROM catalog_product_entity_media_gallery WHERE entity_id = '" . $configProduct->getId() . "'";
				$res2          = $db->query( $sql );

				$gallery_cnt = 0;
				while ( $mdata = $res2->fetch() ) {
					$file = '../media/catalog/product' . $mdata['value'];
					if ( file_exists( $file ) ) {
						$gallery_cnt ++;
					} // if sonu
				} // while sonu

				if ( $gallery_cnt < 1 ) {
					print "Ürün resmi yok! " . $k ++ . " " . $configProduct->getSku() . "\n";
					$pImage  = $dir . $product->getBarkod() . "_1.jpg";
					$pImage2 = $dir . $product->getBarkod() . "_2.jpg";
					$pImage3 = $dir . $product->getBarkod() . "_3.jpg";
					$pImage4 = $dir . $product->getBarkod() . "_4.jpg";
					$pImage5 = $dir . $product->getBarkod() . "_5.jpg";
					$pImage6 = $dir . $product->getBarkod() . "_6.jpg";
					$pImage7 = $dir . $product->getBarkod() . "_7.jpg";
					$pImage8 = $dir . $product->getBarkod() . "_8.jpg";


					$dir2   = Mage::getBaseDir( 'media' ) . DS;
					$images = null;

					if ( str_replace( $dir, "", $pImage ) != "" && file_exists( $pImage ) ) {
						$resim1 = pathinfo( $pImage );
						copy( $pImage, $dir2 . $resim1['basename'] );
						$images[] = $resim1['basename'];
					}

					if ( str_replace( $dir, "", $pImage2 ) != "" && file_exists( $pImage2 ) ) {
						$resim2 = pathinfo( $pImage2 );
						copy( $pImage2, $dir2 . $resim2['basename'] );
						$images[] = $resim2['basename'];
					}
					if ( str_replace( $dir, "", $pImage3 ) != "" && file_exists( $pImage3 ) ) {
						$resim3 = pathinfo( $pImage3 );
						copy( $pImage3, $dir2 . $resim3['basename'] );
						$images[] = $resim3['basename'];
					}
					if ( str_replace( $dir, "", $pImage4 ) != "" && file_exists( $pImage4 ) ) {
						$resim4 = pathinfo( $pImage4 );
						copy( $pImage4, $dir2 . $resim4['basename'] );
						$images[] = $resim4['basename'];
					}
					if ( str_replace( $dir, "", $pImage5 ) != "" && file_exists( $pImage5 ) ) {
						$resim5 = pathinfo( $pImage5 );
						copy( $pImage5, $dir2 . $resim5['basename'] );
						$images[] = $resim5['basename'];
					}
					if ( str_replace( $dir, "", $pImage6 ) != "" && file_exists( $pImage6 ) ) {
						$resim6 = pathinfo( $pImage6 );
						copy( $pImage6, $dir2 . $resim6['basename'] );
						$images[] = $resim6['basename'];
					}
					if ( str_replace( $dir, "", $pImage7 ) != "" && file_exists( $pImage7 ) ) {
						$resim7 = pathinfo( $pImage7 );
						copy( $pImage7, $dir2 . $resim7['basename'] );
						$images[] = $resim7['basename'];
					}
					if ( str_replace( $dir, "", $pImage8 ) != "" && file_exists( $pImage8 ) ) {
						$resim8 = pathinfo( $pImage8 );
						copy( $pImage8, $dir2 . $resim8['basename'] );
						$images[] = $resim8['basename'];
					}

					$configProduct = Mage::getModel( 'catalog/product' )->load( $parentIds[0] );


					$items = $mediaApi->items( $configProduct->getId() );
					try {
						foreach ( $items as $item ) {
							$MediaCatalogDir = $MediaDir . DS . 'catalog' . DS . 'product';
							$DirImagePath    = str_replace( "/", DS, $item['file'] );
							// remove file from Dir
							$io = new Varien_Io_File();
							$io->rm( $MediaCatalogDir . $DirImagePath );
							$mediaApi->remove( $configProduct->getId(), $item['file'] );
							//	$mediaApi->save();

						}
					} catch ( Exception $exception ) {
						var_dump( $exception );
						die( 'Exception Thrown' );
					}

					$configProduct->save();

					$configProduct = Mage::getModel( 'catalog/product' )->load( $parentIds[0] );
					$imageType     = array( 'thumbnail', 'small_image', 'image' );
					if ( $images != null ) {
						$images = array_reverse( $images );
						foreach ( $images as $imageFileName ) {
							$path = $dir2 . $imageFileName;
							if ( file_exists( $path ) ) {
								try {
									$configProduct->addImageToMediaGallery( $path, $imageType, false, false );
								} catch ( Exception $e ) {
									echo $e->getMessage();
									exit;
								}
							} else {
								echo "Can not find image by path: {$path}<br/>";
								exit;
							}
						}
					}

					$configProduct->save();
					print "Image Eklendi!: " . $configProduct->getSku() . " " . $t ++ . "\n";

				} else {
					print "Ürün ve resmi var! " . $k ++ . " " . $configProduct->getSku() . "\n";
					$configProducts = Mage::getModel('catalog/product')->load($configProduct->getId());
					$configProducts->setStatus(1);
					$configProducts->setStockData(
						array(
							'is_in_stock' => 1,
							'manage_stock' => 1,
							'use_config_notify_stock_qty' =>0
						)
					);
					$configProducts->save();
				}


			}

		}
	}
}

	
